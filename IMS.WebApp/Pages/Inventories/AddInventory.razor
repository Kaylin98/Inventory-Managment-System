@page "/addinventory"
@using IMS.CoreBusiness;
@using IMS.UseCases.Inventories.Interfaces;
@inject IAddInventoryUseCase AddInventoryUseCase;
@inject NavigationManager NavigationManager;

<h3>Add Inventory</h3>
<br />

<EditForm Model="inventory" OnValidSubmit="Save">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="form-group">
        <label for="name">Inventory Name</label>
        <InputText id="name" 
               @bind-Value="inventory.Name" 
               class="form-control"
        ></InputText>
    </div>

    <div class="form-group">
        <label for="quantity">Quantity</label>
        <InputNumber id="quantity"
                    @bind-Value="inventory.Quantity"
                    class="form-control"
        ></InputNumber>
    </div>

    <div class="form-group">
        <label for="price">Price</label>
        <InputNumber id="price"
                    @bind-Value="inventory.Price"
                    class="form-control"></InputNumber>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-danger" @onclick="GoBack">Cancel</button>

</EditForm>


@code {
    public Inventory inventory { get; set; } = new Inventory();

    public async Task Save()
    {
        await AddInventoryUseCase.ExecuteAsync(inventory);
        NavigationManager.NavigateTo("/inventories");
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/inventories");
    }
}
